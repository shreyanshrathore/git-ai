// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider   = "postgresql"
    url        = env("DATABASE_URL")
    extensions = [vector]
}

model User {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    imageUrl  String?
    firstName String?
    lastName  String?

    emailAddress String @unique

    credits            Int                 @default(150)
    UserToProject      UserToProject[]
    questionAsked      Question[]
    stripeTransactions StripeTransaction[]
}

model Project {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name      String
    githubUrl String

    deletedAt           DateTime?
    UserToProject       UserToProject[]
    commits             Commit[]
    SourceCodeEmbedding SourceCodeEmbedding[]
    savedQuestions      Question[]
    Meeting             Meeting[]
}

model UserToProject {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    userId    String
    projectId String

    user    User    @relation(fields: [userId], references: [id])
    project Project @relation(fields: [projectId], references: [id])

    @@unique([userId, projectId])
}

model Commit {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    projectId String
    project   Project @relation(fields: [projectId], references: [id])

    commitMessage      String
    commitHash         String
    commitAuthorName   String
    commitAuthorAvatar String
    commitDate         DateTime
    summary            String
}

model SourceCodeEmbedding {
    id String @id @default(cuid())

    summaryEmbedding Unsupported("vector(768)")?
    sourceCode       String
    fileName         String
    summary          String

    projectId String
    project   Project @relation(fields: [projectId], references: [id])
}

model Question {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    question String
    answer   String

    filesReferences Json?

    projectId String
    user      User    @relation(fields: [userId], references: [id])
    userId    String
    Project   Project @relation(fields: [projectId], references: [id])
}

model Meeting {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name       String
    meetingUrl String

    projectId String
    project   Project       @relation(fields: [projectId], references: [id])
    status    MeetingStatus @default(PROCESSING)
    issues    Issue[]
}

enum MeetingStatus {
    PROCESSING
    COMPLETED
}

model Issue {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    start    String
    end      String
    summary  String
    gist     String
    headline String

    meetingId String
    meeting   Meeting @relation(fields: [meetingId], references: [id])
}

model StripeTransaction {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    userId String

    user   User @relation(fields: [userId], references: [id])
    credit Int
}
